apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'realm-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion compile_sdk_version



    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Android support library
    implementation "com.android.support:appcompat-v7:$android_support_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    // Http client
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserver_version"

    // Serializer
    implementation "com.google.code.gson:gson:$gson_version"
    implementation "org.parceler:parceler-api:$parceler_version"
    kapt "org.parceler:parceler:$parceler_version"

    // Dependency injection
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    testImplementation "com.google.dagger:dagger:$dagger_version"
    kaptTest "com.google.dagger:dagger-compiler:$dagger_version"

    // RX
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid2_version"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava2_version"

    // Unit testing
    testImplementation "org.mockito:mockito-core:$mockito_version"
}

repositories {
    mavenCentral()
}
